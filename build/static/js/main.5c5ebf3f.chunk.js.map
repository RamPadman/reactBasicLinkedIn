{"version":3,"sources":["index.js"],"names":["lakeList","console","log","lakeObjList","id","name","viewedBy","Hello","props","AppStatus","InputLabel","library","message","number","Welcome","param1","param2","lakeObj","param3","lakes","CheckBox","SeasonSelection","season","useState","val","setValue1","val2","setValue2","useEffect","value","onChange","e","target","useReducer","checked","toggle","type","map","lkObj","lake","year","setYear","stateValue","setStatus","manager","setManager","onClick","SummerLake","WinterAtHome","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c5ebf3f.chunk.js","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nconst lakeList = ['Echo lake','Madison Lake','Alster Lake'];\n//array destructuring exaample\nconst sampleArray = ['Salesforce','Oracle','Google','Microsoft'];\nconst [first,,,] = sampleArray;\nconsole.log(first);\n//destructuring exaample ends\nconst lakeObjList = [{ id :\"1\", name : \"Echo\", viewedBy : \"Ram\"}\n,{ id : \"2\", name : \"Madison\", viewedBy : \"None\"},\n{ id : \"3\", name : \"Alster\", viewedBy : \"SaruRam\"}];\n//get Github user details\nfunction GithubUser({login}) {\n  //https://api.github.com/users/${login}\n  const [data,setData]  = useState(null);\n  useEffect(()=>{\n    fetch(`https://api.github.com/users/${login}`)\n      .then(res=>res.json())\n      .then(setData)\n      .catch(console.error);\n  },[]);\n  if(data) {\n    return <div>\n    <h1>{data.login}</h1>\n    <br/>\n    {JSON.stringify(data)}</div>\n  }\n  return null;\n}\nfunction GetUserDetails() {\n  return <GithubUser login=\"moonhighway\"/>\n}\nfunction Hello(props) {\n  console.log(props);\n  return (\n    <>\n    <AppStatus />\n    <InputLabel/>\n    <h1>Welcome to {props.library}</h1>\n    <p>Something is cool - {props.message}</p>\n    <p>Total numbers - {props.number}</p>\n    <Welcome param1=\"React\" param2 =\"Learning Reacct\" lakeObj = {lakeObjList} param3={3} lakes = {lakeList}/>\n    <CheckBox />\n    <SeasonSelection season =\"winter\"/>\n\n    </>\n  );\n}\nfunction InputLabel() {\n  const [val, setValue1] = useState(\"\");\n  const [val2, setValue2] = useState(\"\");\n  useEffect(() => {\n    console.log('field1'+val);\n  },[val]);\n  useEffect(() => {\n    console.log('field2'+val2);\n  },[val2]);\n  return (\n    <>\n    <label> Fav Phrase\n    <input value = {val} onChange = {e=>setValue1(e.target.value)}/>\n    </label>\n    <br/>\n    <label> Second Fav Phrase\n    <input value={val2} onChange = {e=>setValue2(e.target.value)}/>\n    </label>\n    </>\n  );\n}\n//input checkbox\n/*function toggle() {\n  setChecked(checked => !checked);\n}*/\nfunction CheckBox() {\n  const[checked,toggle] = useReducer(checked => !checked,false);\n  useEffect(()=>{\n    console.log('checked'+checked);\n  })\n  return(\n    <>\n    <input type =\"checkbox\" value = {checked} onChange = {toggle}/>\n    {checked ? \"checked\" : \"not checked\"}\n    </>\n  )\n}\nfunction Welcome({param1,param2,param3,lakes,lakeObj}) {\n//  console.log(props);\n  return (\n    <div>\n    <div>\n     {lakeObj.map(lkObj => (<div>\n       <h1>{lkObj.name}</h1>\n       <p>Accessed By: {lkObj.viewedBy}</p>\n       </div>))}\n    </div>\n    //display lake values inside this\n    <ul>\n     {lakes.map(lake => (<li>{lake}</li>))}</ul>\n    <h1>Param Check - 1.{param1}</h1>\n    <p>Param Check - 2.{param2}</p>\n    <p>Param Check - 3.{param3}</p>\n  </div>);\n}\n//use hooks to set and return status\nfunction AppStatus() {\n  //use State logic\\\\\n  const [year, setYear] = useState(2020);\n  const [stateValue, setStatus] = useState(\"Open\");\n  const [manager, setManager] = useState(\"Ram Padmanabhan\");\n  return (\n    <>\n    <div>\n    <h1> Year Increment: {year}</h1>\n    <button onClick = {() => {setYear(year+1)}}>New Year</button>\n    </div>\n    <div>\n    <h1>Managers name: {manager}</h1>\n    <button onClick = {() => {setManager(\"Saru\")}}>New Manager</button>\n    </div>\n    <div>\n    <h1>Status : {stateValue}</h1>\n    <button onClick = {() => {setStatus(\"Closed\")}}>Closed</button>\n    <button onClick = {() => {setStatus(\"Open\")}}>Open</button>\n    <button onClick = {() => {setStatus(\"Break for 5 min\")}}>BRB</button>\n    </div>\n    </>\n  )\n}\nfunction SummerLake({name}) {\n  return (\n    <div>\n    <h1>\n        Visit {name} in Hamburg!\n    </h1>\n    </div>\n);\n}\nfunction WinterAtHome({name}) {\n  return (\n    <div>\n    <h1>\n        Stay at {name} in Winters!\n    </h1>\n    </div>\n);\n}\nfunction SeasonSelection({season}) {\n    if(season === 'summer') {\n      return <SummerLake name = \"Alster\"/>;\n    }\n    if(season === 'winter') {\n      return <WinterAtHome name =\"Home\" />;\n    }\n}\nlet city = {\n  name:\"Madrid\",\n  country:\"Spain\"\n};\n\nReactDOM.render(\n\n  <Hello library=\"React\" message =\"Learning Reacct\" number={3}>\n\n</Hello>,\n//React.createElement('ul',null,React.createElement('li',null,'Hot Dogs')),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}